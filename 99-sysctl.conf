# Configuration file for runtime kernel parameters.
# See sysctl.conf(5) for more information.

# Have the CD-ROM close when you use it, and open when you are done.
#dev.cdrom.autoclose = 1
#dev.cdrom.autoeject = 1

## Dieser Parameter legt die Zeit fest, die ablaufen muss, bevor TCP/IP eine geschlossene Verbindung
## freigeben und die entsprechenden Ressourcen wiederverwenden kann. Das Intervall zwischen dem
## Schließen der Verbindung und der Freigabe der Ressourcen wird als Wartestatus TIME_WAIT bzw.
## als Status des Zweifachen der maximalen Segmentlebensdauer (2MSL) bezeichnet. Während dieser Zeit
## verursacht das erneute Öffnen der Verbindung zum Client und zum Server weniger Systemaufwand als
## die Einrichtung einer neuen Verbindung. Durch Verringern des Werts dieses Parameters kann TCP/IP
## die geschlossenen Verbindungen schneller freigeben und zusätzliche Ressourcen für neue Verbindungen
## bereitstellen. Passen Sie diesen Parameter an, wenn die aktive Anwendung eine schnelle Freigabe und
## die Erstellung neuer Verbindungen erfordert und einen niedrigen Durchsatz wegen mehrerer Verbindungen
## im Status TIME_WAIT aufweist. Standard sind 60 Sekunden.
net.ipv4.tcp_fin_timeout = 5

net.netfilter.nf_conntrack_tcp_timeout_established = 21600
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 5

## TCP SYN cookie protection (default)
## helps protect against SYN flood attacks
## only kicks in when net.ipv4.tcp_max_syn_backlog is reached
net.ipv4.tcp_syncookies = 1

## protect against tcp time-wait assassination hazards
## drop RST packets for sockets in the time-wait state
## (not widely supported outside of linux, but conforms to RFC)
net.ipv4.tcp_rfc1337 = 1

## tcp timestamps
## + protect against wrapping sequence numbers (at gigabit speeds)
## + round trip time calculation implemented in TCP
## - causes extra overhead and allows uptime detection by scanners like nmap
## enable @ gigabit speeds
net.ipv4.tcp_timestamps = 1

## ignore echo broadcast requests to prevent being part of smurf attacks (default)
net.ipv4.icmp_echo_ignore_broadcasts = 1

#SYN-Flood-Protection
net.ipv4.tcp_synack_retries = 1

net.ipv4.tcp_slow_start_after_idle = 0

#fastopen for client and server
net.ipv4.tcp_fastopen = 3

# See evil packets in your logs.
net.ipv4.conf.all.log_martians = 1

# Never accept redirects or source routes (these are only useful for routers).
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_redirects = 0
#net.ipv6.conf.all.accept_source_route = 0

# Disable packet forwarding.
net.ipv4.ip_forward = 1
net.ipv6.conf.all.forwarding = 0

# Tweak the port range used for outgoing connections.
net.ipv4.ip_local_port_range = 16000 65530

# Tweak those values to alter disk syncing and swap behavior.
vm.vfs_cache_pressure = 75
#vm.laptop_mode = 0
vm.swappiness = 90

# Tweak how the flow of kernel messages is throttled.
#kernel.printk_ratelimit_burst = 10
#kernel.printk_ratelimit = 5

# Reboot 600 seconds after kernel panic or oops.
kernel.panic_on_oops = 1
kernel.panic = 600

# increase TCP max buffer size settable using setsockopt()
net.core.rmem_max = 16777216 
net.core.wmem_max = 16777216 
# increase Linux autotuning TCP buffer limit 
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
# increase the length of the processor input queue
net.core.netdev_max_backlog = 30000

net.ipv4.tcp_congestion_control=westwood
net.ipv4.tcp_allowed_congestion_control=westwood

# recommended for hosts with jumbo frames enabled
net.ipv4.tcp_mtu_probing=1
